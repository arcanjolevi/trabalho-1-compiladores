<S>             ::= <TYPE> <IDENTIFIER> <S0> <S> | λ
<S0>            ::= ; <S0_> | <FUNCTION_>
<DECLARATION>   ::= <TYPE> <IDENTIFIER> <DECLARATION_>
<DECLARATION_>  ::= ; | , <IDENTIFIER> <DECLARATION_>
<IDENTIFIER>    ::= id
<TYPE>          ::= int | float | char | void
<VALUE>         ::= numero | decimal | string | caracter
<FUNCTION>      ::= <TYPE> <IDENTIFIER> <FUNCTION_>
<FUNCTION_>     ::= ( <F0> ) <STATEMENT>
<F0>            ::= <TYPE> <IDENTIFIER> <F1> | λ
<F1>            ::= , <F0> | [ <F2> ] | λ
<F2>            ::= numero | λ
<ITERATION>     ::= while ( <EXPRESION> ) <STATETMENT> | for ( <ITERATION_>  ; <ITERATION_>  ; <ITERATION_>  ) <STATEMENT>
<FOR_>          ::= ; 
<SELECTION>     ::= if ( <EXPRESION> ) <STATEMENT> <ELSE>
<ELSE>          ::= else <STATEMENT> | λ 
<OPERATOR>      ::= + | - | * | / | < | > | = | &
<STATEMENT__>   ::= <SELECTION> | <ITERATION> | <EXPRESION> ; | <RETURN>
<RETURN>        ::= return <ITERATION_> ;
<S0_>           ::= <S> | λ
<ASSIGNMENT>    ::= <PRIMARY> <ASSIGNMENT_>
<ASSIGNMENT_>   ::= <OPERATOR> <ASSIGNMENT> | λ
<PRIMARY>       ::= <IDENTIFIER> | <VALUE>
<EXPRESION>     ::= <ASSIGNMENT> <EXPRESION_>
<EXPRESION_>    ::= , <ASSIGNMENT> <EXPRESION_> | λ
<STATEMENT>     ::= { <STATEMENT_> }
<STATEMENT_>    ::= <STATEMENT__> <STATEMENT_> | <DECLARATION> <STATEMENT_> | λ
<ITERATION_>    ::= <EXPRESION> | λ